rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /chars/{charId} {
      allow read: if true;
      allow create: if request.auth != null
        && request.resource.data.owner_uid == request.auth.uid;
      allow update, delete: if request.auth != null
        && request.auth.uid == resource.data.owner_uid;
    }

    match /char_items/{docId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    match /items/{itemId} {
      allow read: if true;
      allow write: if false; // 전역 마스터는 수동 관리
    }

    match /encounters/{encId} {
      allow read, write: if request.auth != null;
    }

    match /relations/{docId} {
      allow read, write: if request.auth != null;
    }

        // --- users: 내 정보 ---
        // ----- 내 정보(users) -----
    match /users/{uid} {
      // 로그인 사용자만 열람 가능 (친구 검색용)
      allow read: if isSignedIn();

      // 생성: 본인만
      allow create: if isSignedIn() && request.auth.uid == uid;

      // 수정: 본인만 + 닉네임 제한 + 7일 쿨타임
      allow update: if isSignedIn() && request.auth.uid == uid
        // 닉네임 길이 20자 제한
        && (!('nickname' in request.resource.data) || request.resource.data.nickname.size() <= 20)
        // 닉네임 변경 시 7일 쿨타임 (lastNicknameChangeAt: 클라이언트 millis 숫자)
        && (
          !('nickname' in request.resource.data)
          || !('lastNicknameChangeAt' in resource.data)
          || (request.time.toMillis() - resource.data.lastNicknameChangeAt > 7 * 24 * 60 * 60 * 1000)
        );
    }

    // ----- 친구 요청(friendRequests) -----
    match /friendRequests/{reqId} {
      // 본인과 관련된 문서만 읽기 가능
      allow read: if isSignedIn()
        && (request.auth.uid == resource.data.from || request.auth.uid == resource.data.to);

      // 생성: 보낸 사람(from)만 가능
      allow create: if isSignedIn()
        && request.auth.uid == request.resource.data.from;

      // 업데이트(수락/거절): 수신자(to)만 가능
      allow update: if isSignedIn()
        && request.auth.uid == resource.data.to;

      // 삭제: 양쪽 모두 허용
      allow delete: if isSignedIn()
        && (request.auth.uid == resource.data.from || request.auth.uid == resource.data.to);
    }

    // ----- 친구 관계(friendships) -----
    match /friendships/{pairId} {
      // 서로만 읽기/삭제 가능
      allow read, delete: if isSignedIn()
        && (request.auth.uid == resource.data.a || request.auth.uid == resource.data.b);

      // 생성: 쌍 중 한 명이면 허용 (수락 시 생성)
      allow create: if isSignedIn()
        && (request.auth.uid == request.resource.data.a || request.auth.uid == request.resource.data.b);
    }


    



  }
}
