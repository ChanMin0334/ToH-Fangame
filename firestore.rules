rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // ── helpers (전역에서 쓰게 루트에 둠)
    function isSignedIn() {
      return request.auth != null;
    }
    function isOwner(data) {
      return isSignedIn() && data.owner_uid == request.auth.uid;
    }
    function isCharPath(p) {
      return p is string && p.matches('^chars/[^/]+$');
    }
    function charOwner(p) {
      return get(/databases/$(database)/documents/$(p)).data.owner_uid;
    }

    // chars
    match /chars/{charId} {
      allow read: if true;
      allow create: if isSignedIn() && request.resource.data.owner_uid == request.auth.uid;
      allow update, delete: if isSignedIn() && resource.data.owner_uid == request.auth.uid;
    }

    // char_items
    match /char_items/{itemId} {
      allow read: if true;
      allow create: if isSignedIn()
        && ('char_id' in request.resource.data)
        && get(/databases/$(database)/documents/chars/$(request.resource.data.char_id)).data.owner_uid == request.auth.uid;
      allow update, delete: if isSignedIn()
        && ('char_id' in resource.data)
        && get(/databases/$(database)/documents/chars/$(resource.data.char_id)).data.owner_uid == request.auth.uid;
    }

    // explore_runs (단일 선언)
    match /explore_runs/{runId} {
      // 읽기: 내 것만
      allow read: if isSignedIn() && resource.data.owner_uid == request.auth.uid;

      // 생성: 내 캐릭으로만, 상태 ongoing, startedAt/expiresAt은 숫자(ms) 허용
      allow create: if isSignedIn()
        && request.resource.data.owner_uid == request.auth.uid
        && isCharPath(request.resource.data.charRef)
        && charOwner(request.resource.data.charRef) == request.auth.uid
        && request.resource.data.status == 'ongoing'
        && request.resource.data.startedAt is int
        && request.resource.data.expiresAt is int;

      // 갱신: 소유자만, owner_uid/charRef 위조 금지, status는 ongoing|completed 만
      allow update: if isSignedIn()
        && resource.data.owner_uid == request.auth.uid
        && (!('owner_uid' in request.resource.data) || request.resource.data.owner_uid == resource.data.owner_uid)
        && (!('charRef'   in request.resource.data) || request.resource.data.charRef   == resource.data.charRef)
        && (!('status'    in request.resource.data) || (request.resource.data.status in ['ongoing','completed']));

      allow delete: if false;
    }

    // 나머지 컬렉션 규칙(친구/랭킹/설정/배틀 등)은 지금 쓰던 그대로 두되, 중복/스코프 내 함수 정의만 정리

    // 기본 차단
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
